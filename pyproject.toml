[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=2",
]

[project]
name = "mkbook"
version = "0.0.3"
description = "Make directory including pictures into a PDF book"
readme = "README.md"
keywords = [
  "conbine",
  "getjump",
  "pdf",
]
license = { text = "MIT" }
authors = [
  { name = "eggplants", email = "w10776e8w@yahoo.co.jp" },
]
requires-python = ">=3.9,<4"

classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dependencies = [
  "pillow>=11.1,<12",
  "reportlab>=4.2.5,<5",
  "types-pillow>=10.2.0.20240822,<11",
  "types-reportlab>=4.2.5.20241221,<5",
]
urls.Repository = "https://github.com/eggplants/mkbook"
scripts.mkbook = "mkbook.main:main"

[tool.poetry]
requires-poetry = ">=2.0"
include = [ "mkbook/fonts/*.ttf" ]
packages = [
  { include = "mkbook" },
]

[tool.poetry.group.dev.dependencies]
mypy = ">=0.991,<1.15"
pre-commit = ">=2.20,<5.0"
taskipy = "^1.10.3"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0"

[tool.black]
line-length = 120
target-version = [
  'py39',
]

[tool.ruff]
line-length = 120

lint.select = [
  "ALL",
]
lint.ignore = [
  "D",
  "T201", # `print` found
]
lint.per-file-ignores."main.py" = [
  "EM102",  # Exception must not use an f-string literal, assign to variable first
  "TRY003", # Avoid specifying long messages outside the exception class
]
lint.mccabe.max-complexity = 18

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "strict"

[tool.pytype]
python_version = '3.9'
jobs = '4'
report_errors = true
precise_return = true
protocols = true
strict_import = true

[tool.taskipy.tasks]
test = "pytest --cov=mkbook --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
