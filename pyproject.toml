[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "mkbook"
description = "Make directory including pictures into a PDF book"
readme = "README.md"
keywords = [
  "conbine",
  "getjump",
  "pdf",
]
license = { text = "MIT" }
authors = [ { name = "eggplants", email = "w10776e8w@yahoo.co.jp" } ]
requires-python = ">=3.9,<4"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Typing :: Typed",
]
dynamic = [ "version" ]
dependencies = [
  "pillow>=11.1,<12",
  "reportlab>=4.2.5,<5",
  "types-pillow>=10.2.0.20240822,<11",
  "types-reportlab>=4.2.5.20241221,<5",
]

urls.Repository = "https://github.com/eggplants/mkbook"
scripts.mkbook = "mkbook.main:main"

[dependency-groups]
dev = [
  "mypy>=0.991,<1.15",
  "pre-commit>=2.20,<5",
  "pytest>=8.3.5",
  "pytest-cov>=6.1.1",
  "taskipy>=1.10.3,<2",
]
docs = [ "pdoc" ]

[tool.hatch.version]
# tool.hatch.version.source is not listed in official schema.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
include = [
  "mkbook",
  "mkbook/fonts/*.ttf",
]

[tool.hatch.build.targets.wheel]
include = [
  "mkbook",
  "mkbook/fonts/*.ttf",
]

[tool.ruff]
line-length = 120
format.indent-style = "space"
format.quote-style = "double"
lint.select = [
  "ALL",
]
lint.ignore = [
  "T201", # `print` found
]
lint.per-file-ignores."main.py" = [
  "EM102",  # Exception must not use an f-string literal, assign to variable first
  "TRY003", # Avoid specifying long messages outside the exception class
]
lint.per-file-ignores."tests/*.py" = [
  "D",
  "S101", # Use of `assert` detected
]
lint.pydocstyle.convention = "google"

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "strict"

[tool.pytype]
python_version = '3.9'
jobs = '4'
report_errors = true
precise_return = true
protocols = true
strict_import = true

[tool.uv]
default-groups = [
  "dev",
  "docs",
]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
fallback-version = "0.0.0"

[tool.taskipy.tasks]
test = "pytest --cov=mkbook --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
gendoc = "pdoc mkbook -o ./docs --docformat google"
